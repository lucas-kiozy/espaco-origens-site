---
/**
 * index.astro — Home do Espaço Origens
 * - SEO: title/description, headings corretos, JSON-LD (CollectionPage)
 * - UI: header externo, hero discreto (sem logo central), grade 3×3 de produtos
 * - Galeria: cada card possui 1..N imagens em carrossel com loop e pausa no hover
 * - Placeholder: se um produto não tiver imagens, usa /images/logo.png
 */

import Layout from '../layouts/Layout.astro'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import Button from '../components/ui/Button.astro'

// Produtos de exemplo (adicione/remova conforme necessário).
// Basta trocar os arrays de images depois; se vazio/ausente, o placeholder é aplicado.
type Product = { title: string; images?: string[] }
const products: Product[] = [
  { title: 'tigela de terracota', images: ['/images/pecas/cartao_frente_temp.png', '/images/pecas/cartao_verso_temp.png'] },
  { title: 'colar com bronze queimado', images: ['/images/pecas/peca2.jpg'] },
  { title: 'escultura em madeira', images: ['/images/pecas/peca3.jpg', '/images/pecas/peca3b.jpg', '/images/peca3c.jpg'] },
  { title: 'cesto tramado', images: ['/images/pecas/peca4.jpg'] },
  { title: 'peça autoral — série raízes' }, // sem imagens → usa placeholder
  { title: 'painel em fibras naturais' },   // sem imagens → usa placeholder
  { title: 'conjunto cerâmico', images: ['/images/pecas/peca5.jpg', '/images/pecas/peca5b.jpg'] },
  { title: 'pingentes artesanais', images: ['/images/pecas/peca6.jpg'] },
  { title: 'máscara decorativa', images: ['/images/pecas/peca7.jpg', '/images/pecas/peca7b.jpg'] },
]

// Prepara dados para JSON-LD do tipo CollectionPage (ajuda no entendimento da grade)
const meta = {
  title: 'Espaço Origens — ateliê de arte e ofícios',
  description:
    'Artesanato autoral com identidade: peças únicas, técnicas tradicionais e design contemporâneo. Explore a galeria do Espaço Origens.',
  siteUrl: 'https://espacoorigens.com.br',
}

const collectionLd = {
  '@context': 'https://schema.org',
  '@type': 'CollectionPage',
  name: 'Galeria — Espaço Origens',
  url: meta.siteUrl,
  hasPart: products.map((p, i) => ({
    '@type': 'CreativeWork',
    name: p.title,
    position: i + 1,
    url: `${meta.siteUrl}/#item-${i + 1}`,
  })),
}
---

<Layout title={meta.title} description={meta.description}>
  <script type="application/ld+json" set:html={JSON.stringify(collectionLd)} />

  <Header />

  <!-- HERO discreto: foco no texto, sem logo solta; CTAs legíveis com forte contraste -->
  <section class="max-w-6xl mx-auto px-4 pt-14 pb-8">
    <h1 class="text-4xl md:text-5xl leading-tight lowercase text-marrom">
      ateliê de arte & ofícios com <span class="text-terracota">raízes</span>
    </h1>
    <p class="mt-3 text-lg text-marrom/80 max-w-prose">
      peças autorais feitas com técnica e cuidado — tradição, materiais naturais e um olhar contemporâneo.
    </p>
    <div class="mt-6 flex gap-3">
      <!-- Botões: primary (terracota com texto branco) e outline (contraste alto) -->
      <Button href="/sobre" variant="primary" size="md">conheça o ateliê</Button>
      <Button href="/contato" variant="outline" size="md">contato</Button>
    </div>
  </section>

  <!-- divisor suave com a paleta da marca -->
  <div class="max-w-6xl mx-auto px-4">
    <div class="h-[10px] rounded-full bg-gradient-to-r from-terracota via-coral to-bronze"></div>
    <div class="mt-1 h-[3px] rounded-full bg-areia"></div>
  </div>

  <!-- GRADE 3×3 de produtos -->
  <section class="max-w-6xl mx-auto px-4 py-10">
    <h2 class="text-2xl lowercase text-marrom mb-5">galeria</h2>

    <!-- role=list ajuda leitores de tela; grid responsiva mantém 3 colunas no desktop -->
    <ul role="list" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
      {products.map((p, idx) => {
        const imgs = (p.images && p.images.length > 0) ? p.images : ['/images/logo.png'] // placeholder
        const first = imgs[0]
        return (
          <li id={`item-${idx + 1}`} class="group">
            <!-- Card do produto -->
            <article
              class="relative rounded-2xl overflow-hidden bg-areia/40 border border-areia/70 shadow-sm focus-within:ring-2 focus-within:ring-terracota/60"
              data-carousel
              data-images={JSON.stringify(imgs)}
              data-title={p.title}
              data-index="0"
            >
              <!-- Área da imagem (quadrada) -->
              <div class="relative w-full aspect-square bg-creme">
                <img
                  src={first}
                  alt={`Peça artesanal: ${p.title} — imagem 1`}
                  width="900" height="900"
                  loading="lazy" decoding="async"
                  class="absolute inset-0 w-full h-full object-cover"
                />
                <!-- faixa de título com gradiente para legibilidade -->
                <div class="absolute inset-x-0 bottom-0 p-3">
                  <div class="rounded-xl px-3 py-2 bg-gradient-to-r from-creme/95 via-areia/90 to-creme/95 border border-areia/70 shadow backdrop-blur-sm">
                    <h3 class="text-base font-medium lowercase text-marrom">{p.title}</h3>
                  </div>
                </div>
              </div>

              <!-- Barra de progresso mínima (decorativa) -->
              <div class="absolute top-2 right-2 flex gap-1">
                {imgs.map((_, i) => (
                  <span class={`h-1.5 w-4 rounded-full ${i === 0 ? 'bg-terracota' : 'bg-areia/80'}`} aria-hidden="true"></span>
                ))}
              </div>
            </article>
          </li>
        )
      })}
    </ul>

    <!-- Nota curta para SEO e contexto -->
    <p class="sr-only">
      Galeria com peças artesanais em madeira, fibras, argila e metais. As imagens alternam automaticamente.
    </p>
  </section>

  <Footer />

  <!--
    Script do carrossel por card
    - Inicia/pausa com IntersectionObserver (só roda quando visível)
    - Pausa no hover/focus para acessibilidade
    - Loop circular das imagens (quando chega na última, volta para a primeira)
    - Atualiza também os "pills" de progresso
  -->
  <script is:inline>
    // Utilitário: avança o índice circularmente
    const nextIdx = (i, len) => (i + 1) % len;

    // Inicia o carrossel em um card
    function startCard(el) {
      const imgEl = el.querySelector('img');
      const dots = Array.from(el.querySelectorAll('.absolute.top-2.right-2 span'));
      const imgs = JSON.parse(el.dataset.images || '[]');
      if (!imgEl || imgs.length <= 1) return; // nada a alternar

      let idx = Number(el.dataset.index || 0);
      let timer;

      const setImage = (i) => {
        imgEl.src = imgs[i];
        imgEl.alt = `Peça artesanal: ${el.dataset.title} — imagem ${i + 1}`;
        dots.forEach((d, k) => d.className = `h-1.5 w-4 rounded-full ${k === i ? 'bg-terracota' : 'bg-areia/80'}`);
        el.dataset.index = String(i);
      };

      const play = () => {
        if (timer) return;
        timer = setInterval(() => {
          idx = nextIdx(idx, imgs.length);
          setImage(idx);
        }, 3000); // tempo de troca (3s)
      };

      const pause = () => {
        if (timer) { clearInterval(timer); timer = null; }
      };

      // Interações do usuário
      el.addEventListener('mouseenter', pause);
      el.addEventListener('mouseleave', play);
      el.addEventListener('focusin', pause);
      el.addEventListener('focusout', play);

      // Começa com a primeira imagem (garantia) e roda
      setImage(idx);
      play();

      // Guarda métodos para parar quando sair de viewport
      el._carouselPause = pause;
    }

    // Para o carrossel em um card
    function stopCard(el) {
      if (el._carouselPause) el._carouselPause();
    }

    // Observer: liga/desliga o carrossel conforme visibilidade
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        const el = entry.target;
        if (entry.isIntersecting) startCard(el);
        else stopCard(el);
      });
    }, { threshold: 0.25 });

    document.querySelectorAll('[data-carousel]').forEach((el) => observer.observe(el));
  </script>
</Layout>
