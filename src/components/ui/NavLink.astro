---
type Match = 'exact' | 'startsWith';

interface Props extends astroHTML.JSX.AnchorHTMLAttributes {
  href: string;
  label: string;
  match?: Match;
  class?: string;
}

const {
  href = '/',
  label,
  match = 'exact',
  class: extra = '',
  ...rest
} = Astro.props as Props;

// junta base + caminho garantindo UMA barra
function withBase(path: string) {
  const base = import.meta.env.BASE_URL || '/';
  const b = base.endsWith('/') ? base : base + '/';
  const p = path.startsWith('/') ? path.slice(1) : path;
  return b + p;
}

// ativa?
const isActive =
  match === 'startsWith'
    ? (href === '/' ? Astro.url.pathname === withBase('/') : Astro.url.pathname.startsWith(withBase(href)))
    : Astro.url.pathname === withBase(href);

// classes
const baseCls = 'navlink px-3 py-2 rounded-xl transition-colors lowercase';
const active = 'navlink-active';
const idle = 'navlink-idle';
const cls = `${baseCls} ${isActive ? active : idle} ${extra}`;
---

<a
  href={withBase(href)}
  class={cls}
  aria-current={isActive ? 'page' : undefined}
  {...(rest as astroHTML.JSX.AnchorHTMLAttributes)}
>
  {label}
</a>
